<?php

namespace App\Repository\Maze;

use App\Entity\Maze\Actor;
use App\Entity\Maze\FilmographyMovie;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * FilmographyMovieRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FilmographyMovieRepository extends ServiceEntityRepository
{
    /**
     * @param RegistryInterface $registry
     */
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, FilmographyMovie::class);
    }

    /**
     * Allows to get movies with both specified actors.
     *
     * @param Actor first actor that must appear in searched movies
     * @param Actor second actor that must appear in searched movies
     *
     * @return FilmographyMovie[]|array
     */
    public function getMoviesWithActors(Actor $actor1, Actor $actor2): array
    {
        return $this->createQueryBuilder('movie')
            ->where(':actor1 MEMBER OF movie.actors')
            ->andWhere(':actor2 MEMBER OF movie.actors')
            ->setParameter('actor1', $actor1)
            ->setParameter('actor2', $actor2)
            ->getQuery()
            ->getResult()
        ;
    }

    /**
     * Allows to clear filmography for all actors.
     *
     * @return int deleted rows count
     */
    public function clearFilmography(): int
    {
        return $this->createQueryBuilder('movie')
            ->delete()
            ->getQuery()
            ->execute()
        ;
    }
}
