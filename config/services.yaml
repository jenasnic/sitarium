# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    tmdb_api_key: '%env(tmdb_api_key)%'
    tmdb_base_uri: 'https://api.themoviedb.org/3'
    tmdb_picture_base_uri: 'https://image.tmdb.org/t/p/w185'
    mailer_from: '%env(mailer_from)%'
    mailer_sender: '%env(mailer_sender)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $rootDir: '%kernel.project_dir%'
            $mailerFrom: '%mailer_from%'
            $mailerSender: '%mailer_sender%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{Annotation,Domain,Entity,Enum,Event,Migrations,Model,Tool,Kernel.php}'
    App\:
        resource: '../src/{DataFixtures,EventListener,Repository,Service,Twig}'

    App\Service\Tmdb\TmdbApiService:
        bind:
            $apiKey: '%tmdb_api_key%'
            $baseUri: '%tmdb_base_uri%'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
